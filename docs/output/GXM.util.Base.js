Ext.data.JsonP.GXM_util_Base({"tagname":"class","name":"GXM.util.Base","extends":"Ext.Base","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":["GXM.version"],"uses":[],"code_type":"ext_define","inheritable":false,"inheritdoc":null,"meta":{},"id":"class-GXM.util.Base","members":{"cfg":[],"property":[],"method":[{"name":"createConfigAlias","tagname":"method","owner":"GXM.util.Base","meta":{},"id":"method-createConfigAlias"}],"event":[],"css_var":[],"css_mixin":[]},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"files":[{"filename":"Base.js","href":"Base.html#GXM-util-Base"}],"html_meta":{},"component":false,"superclasses":["Ext.Base"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>GXM.util.Base</strong></div></div><h4>Requires</h4><div class='dependency'>GXM.version</div><h4>Files</h4><div class='dependency'><a href='source/Base.html#GXM-util-Base' target='_blank'>Base.js</a></div></pre><div class='doc-contents'><p>api: constructor\n .. class:: Base(config)</p>\n\n<pre><code> The class that is used to access the static util methods\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createConfigAlias' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='GXM.util.Base'>GXM.util.Base</span><br/><a href='source/Base.html#GXM-util-Base-method-createConfigAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/GXM.util.Base-method-createConfigAlias' class='name expandable'>createConfigAlias</a>( <span class='pre'>Object cls, Object alias, Object origin</span> )</div><div class='description'><div class='short'>api: method[createConfigAlias]\n :param cls: Object The class object to manipulate\n :param alias: String The alias to ...</div><div class='long'><p>api: method[createConfigAlias]\n :param cls: <code>Object</code> The class object to manipulate\n :param alias: <code>String</code> The alias to set for the config\n :param origin: <code>String</code> The config to be aliased</p>\n\n<p> Creates an alias for a config property of a class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>alias</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>origin</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});